{"version":3,"sources":["App.js","index.js"],"names":["Header","Layout","Content","Footer","App","Sider","Form","useForm","form","useState","gear","setGear","price","setPrice","lot","setLot","fileList","setFileList","workbook","setWorkbook","loading","setLoading","disabled","setDisabled","menuItems","ToolOutlined","map","icon","index","key","String","createElement","label","fileProps","accept","onRemove","file","beforeUpload","readFile","then","data","wb","XLSX","type","raw","catch","err","finally","Promise","resolve","reject","fr","FileReader","onerror","onload","result","readAsBinaryString","onBtnClick","datas","SheetNames","forEach","sheetName","items","sheet_to_row_object_array","Sheets","push","alert","getObjArray","length","results","_price","parseFloat","item","parseInt","min","max","_lot","fieldsWS","json_to_sheet","book_new","book_append_sheet","exportFile","className","theme","mode","defaultSelectedKeys","style","padding","marginTop","initialValues","Item","value","onChange","e","target","rules","required","message","placeholder","step","UploadOutlined","onClick","title","bordered","column","textAlign","ReactDOM","render","document","getElementById"],"mappings":"wSAgBQA,EAAmCC,IAAnCD,OAAQE,EAA2BD,IAA3BC,QAASC,EAAkBF,IAAlBE,OA4QVC,GA5Q4BH,IAAVI,MAErB,WAEV,MAAeC,IAAKC,UAAbC,EAAP,oBACA,EAAwBC,mBAAS,KAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,OAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAsBJ,mBAAS,MAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAA8BV,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KACA,EAAgCZ,oBAAS,GAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KAEMC,EAAY,CAChBC,KACAC,KAAI,SAACC,EAAMC,GAAP,MAAkB,CACtBC,IAAKC,OAAOF,EAAQ,GACpBD,KAAMI,wBAAcJ,GACpBK,MAAO,yBAGHC,EAAY,CAChBC,OAAQ,uBACRC,SAAU,SAACC,GACTnB,EAAY,IACZE,EAAY,MACZI,GAAY,IAEdc,aAAc,SAACD,GAkBb,OAjBAnB,EAAY,CAACmB,IACbf,GAAW,GAEXiB,EAASF,GACNG,MAAK,SAACC,GACL,IAAIC,EAAKC,IAAUF,EAAM,CACvBG,KAAM,SACNC,KAAK,IAGPzB,EAAYsB,MAEbI,OAAM,SAACC,OACPC,SAAQ,WACP1B,GAAW,GACXE,GAAY,OAET,GAETP,YAGIsB,EAAW,SAACF,GAChB,OAAO,IAAIY,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAK,IAAIC,WACfD,EAAGE,QAAUH,EACbC,EAAGG,OAAS,WACVL,EAAQE,EAAGI,SAEbJ,EAAGK,mBAAmBpB,OAgCpBqB,EAAa,WASjB,IAAMC,EA3BY,WAClB,IAAIH,EAAS,GAcb,OAZIrC,EACFA,EAASyC,WAAWC,SAAQ,SAAUC,GACpC,IAAIC,EAAQpB,IAAWqB,0BACrB7C,EAAS8C,OAAOH,IAElBN,EAAOU,KAAKH,MAIdI,MAAM,sEAGDX,EAYOY,GAEd,GAAoB,GAAhBT,EAAMU,OAAV,CAIA,IAAMC,EAAU,GAEZC,EAASC,WAAW3D,GAExB8C,EAAM,GAAGE,SAAQ,SAACY,EAAM5C,GACtB,IAAI2B,EAAM,eAAQiB,GAElB,GAAc,IAAV5C,EACF2B,EAAO,UAAOe,EACdf,EAAO,UAAO,GACdA,EAAO,gBAAQkB,SAAS3D,OACnB,CACL,IAAI4D,EAAMH,WAAWC,EAAK,uBACtBG,EAAMJ,WAAWC,EAAK,uBAE1B,GAAIG,GAAOL,EAASC,WAAW7D,GAAO,CACpC,IAAIkE,EAAOH,UAAUE,EAAML,GAAUC,WAAW7D,IAEhD4D,EAASC,WAAWD,EAASM,EAAOL,WAAW7D,IAC/C6C,EAAO,UAAO,GACdA,EAAO,UAAOe,EACdf,EAAO,gBAAQqB,OACV,GAAIF,GAAOJ,EAASC,WAAW7D,GAAO,CAC3C,IAAIkE,EAAOH,UAAUH,EAASI,GAAOH,WAAW7D,IAChD4D,EAASC,WAAWD,EAASM,EAAOL,WAAW7D,IAC/C6C,EAAO,UAAOe,EACdf,EAAO,UAAO,GACdA,EAAO,gBAAQqB,OAEfrB,EAAO,UAAO,GACdA,EAAO,UAAO,GACdA,EAAO,gBAAQ,GAInBc,EAAQJ,KAAKV,MA9EE,SAACf,GAElB,IAAMqC,EAAWnC,IAAWoC,cAActC,GAEpCC,EAAKC,IAAWqC,WACtBrC,IAAWsC,kBAAkBvC,EAAIoC,EAAU,gBAE3CnC,IAAmBD,EAAI,eA4EvBwC,CAAWZ,KAGb,OACI,eAAC,IAAD,WACE,eAACrE,EAAD,CAAQkF,UAAU,SAAlB,UACE,qBAAKA,UAAU,SACf,cAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,KAAMvB,MAAOtC,OAE1E,eAACtB,EAAD,CACEoF,MAAO,CACLC,QAAS,SACTC,UAAW,SAHf,UAME,eAAC,IAAD,CACEhF,KAAMA,EACNiF,cAAe,CACb/E,KAAM,IACNE,MAAO,KACPE,IAAK,KACLI,SAAU,IANd,UASE,cAAC,IAAKwE,KAAN,CACE1D,MAAM,eACN2D,MAAOjF,EACPkF,SAAU,SAACC,GAAD,OAAOlF,EAAQ4D,WAAWsB,EAAEC,OAAOH,SAC7CI,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iBAPf,SAWE,cAAC,IAAD,CACEC,YAAY,iCACZP,MAAOjF,EACPgE,IAAK,EACLyB,KAAM,OAGV,cAAC,IAAKT,KAAN,CACE1D,MAAM,2BACN2D,MAAO/E,EACPgF,SAAU,SAACC,GAAD,OAAOhF,EAAS0D,WAAWsB,EAAEC,OAAOH,SAC9CI,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iBAPf,SAWE,cAAC,IAAD,CACEC,YAAY,uCACZP,MAAO/E,EACP8D,IAAK,EACLyB,KAAM,OAGV,cAAC,IAAKT,KAAN,CACE1D,MAAM,2BACN2D,MAAO7E,EACP8E,SAAU,SAACC,GAAD,OAAO9E,EAAO0D,SAASoB,EAAEC,OAAOH,SAC1CI,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iBAPf,SAWE,cAAC,IAAD,CACEC,YAAY,uCACZP,MAAO7E,EACP4D,IAAK,EACLyB,KAAM,MAGV,cAAC,IAAKT,KAAN,UACE,cAAC,IAAD,2BAAYzD,GAAZ,aACE,cAAC,IAAD,CAAQN,KAAM,cAACyE,EAAA,EAAD,IAAd,iDAGJ,cAAC,IAAKV,KAAN,UACE,cAAC,IAAD,CACEtE,QAASA,EACTE,SAAUA,EACVqB,KAAK,UACL0D,QAAS,kBAAM5C,KAJjB,2CAUJ,eAAC,IAAD,CACJ6C,MAAM,eACNC,UAAQ,EACRC,OAAQ,EAHJ,UAKJ,cAAC,IAAad,KAAd,CAAmB1D,MAAM,gBAAzB,wCACA,cAAC,IAAa0D,KAAd,CAAmB1D,MAAM,4BAAzB,yCACA,cAAC,IAAa0D,KAAd,CAAmB1D,MAAM,4BAAzB,0CACA,cAAC,IAAa0D,KAAd,CAAmB1D,MAAM,sBAAzB,yGACA,cAAC,IAAa0D,KAAd,CAAmB1D,MAAM,sBAAzB,yGACA,cAAC,IAAa0D,KAAd,CAAmB1D,MAAM,2BAAzB,8TAGA,cAAC,IAAa0D,KAAd,CAAmB1D,MAAM,2BAAzB,mUAKE,cAAC7B,EAAD,CACEmF,MAAO,CACLmB,UAAW,UAFf,wDC5QRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,gB","file":"static/js/main.138b0b12.chunk.js","sourcesContent":["import \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport \"jszip\";\r\nimport * as XLSX from \"xlsx\";\r\nimport {\r\n  AppstoreOutlined,\r\n  BarChartOutlined,\r\n  CloudOutlined,\r\n  ShopOutlined,\r\n  TeamOutlined,\r\n  UploadOutlined,\r\n  UserOutlined,\r\n  ToolOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, Form, Input, Radio, message, Upload, InputNumber, Layout, Menu, Descriptions  } from \"antd\";\r\nimport { useState, useEffect, createElement } from \"react\";\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst App = () => {\r\n  //const reader = new FileReader();\r\n  const [form] = Form.useForm();\r\n  const [gear, setGear] = useState(\"5\");\r\n  const [price, setPrice] = useState(\"280\");\r\n  const [lot, setLot] = useState(\"10\");\r\n  const [fileList, setFileList] = useState([]);\r\n  const [workbook, setWorkbook] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [disabled, setDisabled] = useState(true);\r\n\r\n  const menuItems = [\r\n    ToolOutlined,\r\n  ].map((icon, index) => ({\r\n    key: String(index + 1),\r\n    icon: createElement(icon),\r\n    label: '小工具',\r\n  }));\r\n\r\n  const fileProps = {\r\n    accept: \".xlsx,.xls,.ods,.csv\",\r\n    onRemove: (file) => {\r\n      setFileList([]);\r\n      setWorkbook(null);\r\n      setDisabled(true);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([file]);\r\n      setLoading(true);\r\n\r\n      readFile(file)\r\n        .then((data) => {\r\n          let wb = XLSX.read(data, {\r\n            type: \"binary\",\r\n            raw: true,\r\n          });\r\n\r\n          setWorkbook(wb);\r\n        })\r\n        .catch((err) => {})\r\n        .finally(() => {\r\n          setLoading(false);\r\n          setDisabled(false);\r\n        });\r\n      return false;\r\n    },\r\n    fileList,\r\n  };\r\n\r\n  const readFile = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const fr = new FileReader();\r\n      fr.onerror = reject;\r\n      fr.onload = () => {\r\n        resolve(fr.result);\r\n      };\r\n      fr.readAsBinaryString(file);\r\n    });\r\n  };\r\n\r\n  const exportFile = (data) => {\r\n    /* make the worksheet */\r\n    const fieldsWS = XLSX.utils.json_to_sheet(data);\r\n    /* add to workbook */\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, fieldsWS, \"結果\");\r\n    /* generate an XLSX file */\r\n    XLSX.writeFileXLSX(wb, \"sheets.xlsx\");\r\n  };\r\n\r\n  const getObjArray = () => {\r\n    var result = [];\r\n\r\n    if (workbook) {\r\n      workbook.SheetNames.forEach(function (sheetName) {\r\n        var items = XLSX.utils.sheet_to_row_object_array(\r\n          workbook.Sheets[sheetName]\r\n        );\r\n        result.push(items);\r\n      });\r\n    } else {\r\n      //throw new Error('excel檔案未上傳或格式錯誤!');\r\n      alert(\"excel檔案未上傳或格式錯誤!\");\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const onBtnClick = () => {\r\n    // try {\r\n    //   const values = await form.validateFields();\r\n    //   console.log('Success:', values);\r\n    // } catch (errorInfo) {\r\n    //   console.log('Failed:', errorInfo);\r\n    //   return;\r\n    // }\r\n\r\n    const datas = getObjArray();\r\n\r\n    if (datas.length == 0) {\r\n      return;\r\n    }\r\n\r\n    const results = [];\r\n\r\n    let _price = parseFloat(price);\r\n\r\n    datas[0].forEach((item, index) => {\r\n      let result = { ...item };\r\n\r\n      if (index === 0) {\r\n        result[\"買\"] = _price;\r\n        result[\"賣\"] = \"\";\r\n        result[\"口數\"] = parseInt(lot);\r\n      } else {\r\n        let min = parseFloat(item[\"最低價\"]);\r\n        let max = parseFloat(item[\"最高價\"]);\r\n\r\n        if (max >= _price + parseFloat(gear)) {\r\n          let _lot = parseInt((max - _price) / parseFloat(gear));\r\n\r\n          _price = parseFloat(_price + _lot * parseFloat(gear));\r\n          result[\"買\"] = \"\";\r\n          result[\"賣\"] = _price;\r\n          result[\"口數\"] = _lot;\r\n        } else if (min <= _price - parseFloat(gear)) {\r\n          let _lot = parseInt((_price - min) / parseFloat(gear));\r\n          _price = parseFloat(_price - _lot * parseFloat(gear));\r\n          result[\"買\"] = _price;\r\n          result[\"賣\"] = \"\";\r\n          result[\"口數\"] = _lot;\r\n        } else {\r\n          result[\"買\"] = \"\";\r\n          result[\"賣\"] = \"\";\r\n          result[\"口數\"] = \"\";\r\n        }\r\n      }\r\n\r\n      results.push(result);\r\n    });\r\n\r\n    //console.log(results);\r\n    //console.log(results.length);\r\n    exportFile(results);\r\n  };\r\n\r\n  return (\r\n      <Layout>\r\n        <Header className=\"header\">\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']} items={menuItems} />\r\n        </Header>\r\n        <Content\r\n          style={{\r\n            padding: '0 50px',\r\n            marginTop: ' 30px'\r\n          }}\r\n        >\r\n          <Form\r\n            form={form}\r\n            initialValues={{\r\n              gear: \"5\",\r\n              price: \"28\",\r\n              lot: \"10\",\r\n              workbook: {},\r\n            }}\r\n          >\r\n            <Form.Item\r\n              label=\"檔位\"\r\n              value={gear}\r\n              onChange={(e) => setGear(parseFloat(e.target.value))}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"必填\",\r\n                },\r\n              ]}\r\n            >\r\n              <InputNumber\r\n                placeholder=\"請輸入數值\"\r\n                value={gear}\r\n                min={0}\r\n                step={0.5}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"初始價格\"\r\n              value={price}\r\n              onChange={(e) => setPrice(parseFloat(e.target.value))}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"必填\",\r\n                },\r\n              ]}\r\n            >\r\n              <InputNumber\r\n                placeholder=\"請輸入正整數\"\r\n                value={price}\r\n                min={1}\r\n                step={0.5}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"初始口數\"\r\n              value={lot}\r\n              onChange={(e) => setLot(parseInt(e.target.value))}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"必填\",\r\n                },\r\n              ]}\r\n            >\r\n              <InputNumber\r\n                placeholder=\"請輸入正整數\"\r\n                value={lot}\r\n                min={1}\r\n                step={1}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Upload {...fileProps}>\r\n                <Button icon={<UploadOutlined />}>請選擇檔案</Button>\r\n              </Upload>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                loading={loading}\r\n                disabled={disabled}\r\n                type=\"primary\"\r\n                onClick={() => onBtnClick()}\r\n              >\r\n                匯出結果\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          <Descriptions\r\n      title=\"說明\"\r\n      bordered\r\n      column={1}\r\n    >\r\n      <Descriptions.Item label=\"#檔位\">預設值為 5</Descriptions.Item>\r\n      <Descriptions.Item label=\"#起始口數\">預設值為 10</Descriptions.Item>\r\n      <Descriptions.Item label=\"#起始價位\">預設值為 280</Descriptions.Item>\r\n      <Descriptions.Item label=\"#最高價\">從Excel中讀取，標頭請取名為 #最高價</Descriptions.Item>\r\n      <Descriptions.Item label=\"#最低價\">從Excel中讀取，標頭請取名為 #最低價</Descriptions.Item>\r\n      <Descriptions.Item label=\"賣出條件\">\r\n      #最高價 &gt;= #前一交易價 + #檔位 =&gt; 賣出，#交易口數 = (#最高價 - #前一交易價) / #檔位; #交易價格 = #前一交易價格 + (#交易口數 X #檔位)\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"買入條件\">\r\n      #最低價 &lt;= #前一交易價 - #檔位 =&gt; 買入，交易口數 = (#前一交易價 - #最低價) / #檔位; #交易價格 = #前一交易價格 - (#交易口數 X #檔位)\r\n      </Descriptions.Item>\r\n    </Descriptions> \r\n        </Content>\r\n        <Footer\r\n          style={{\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          J-Tools ©2022 Created by Jay Chang\r\n        </Footer>\r\n      </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('container'));\r\n"],"sourceRoot":""}